openapi: "3.0.0"

info:
  title: Opsway API
  version: 1.0.0

servers:
  - url: https://api.opsway.io/v1
  - url: "{scheme}://{host}"
    description: Custom
    variables:
      scheme:
        default: "http"
        enum:
          - "http"
          - "https"
      host:
        default: "localhost:8080/v1"

components:
  schemas:
    Team:
      type: object
      properties:
        name:
          type: string
        logo:
          type: string
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    User:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name: 
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    Monitor:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true

paths:
  # Authentication
  /authentication/login:
    post:
      tags:
        - Authentication
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    readOnly: true
                  user:
                    $ref: '#/components/schemas/User'
                    readOnly: true
        401:
          description: Unauthorized
  /authentication/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        200:
          description: Refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    readOnly: true
        401:
          description: Unauthorized

  # Teams
  /teams/{teamId}:
    get:
      tags:
        - Team
      summary: Get team
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        404:
          description: Not found
        401:
          description: Unauthorized
    patch:
      tags:
        - Team
      summary: Update team
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        400:
          description: Bad request
        404:
          description: Not found
        401:
          description: Unauthorized

  # Users
  /teams/{teamId}/users:
    get:
      tags:
        - Users
      summary: Get team users
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        404:
          description: Not found
        401:
          description: Unauthorized
  /teams/{teamId}/users/{userId}:
    get:
      tags:
        - Users
      summary: Get team user
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: number
        - name: userId
          in: path
          required: true
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Not found
        401:
          description: Unauthorized
    patch:
      tags:
        - Users
      summary: Update team user
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: number
        - name: userId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request
        404:
          description: Not found
        401:
          description: Unauthorized

  # Monitors
  /teams/{teamId}/monitors:
    get:
      tags:
        - Monitors
      summary: Get team monitors
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Monitor'
        404:
          description: Not found
        401:
          description: Unauthorized
  /teams/{teamId}/monitors/{monitorId}:
    get:
      tags:
        - Monitors
      summary: Get team monitor
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: number
        - name: monitorId
          in: path
          required: true
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        404:
          description: Not found
        401:
          description: Unauthorized
    post:
      tags:
        - Monitors
      summary: Create team monitor
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: number
        - name: monitorId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        400:
          description: Bad request
        401: 
          description: Unauthorized
        404:
          description: Not found
    patch:
      tags:
        - Monitors
      summary: Update team monitor
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: number
        - name: monitorId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        400:
          description: Bad request
        404:
          description: Not found
        401:
          description: Unauthorized
    delete:
      tags:
        - Monitors
      summary: Delete team monitor
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: number
        - name: monitorId
          in: path
          required: true
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        404:
          description: Not found
        401:
          description: Unauthorized